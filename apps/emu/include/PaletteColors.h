//Colors in RGBA (8 bit colors)
#if 0
const uint32_t colors[] = {
            0x666666ff, 
            0x002a88ff, 
            0x1412a7ff, 
            0x3b00a4ff, 
            0x5c007eff, 
            0x6e0040ff, 
            0x6c0600ff, 
            0x561d00ff,
            0x333500ff, 
            0x0b4800ff, 
            0x005200ff, 
            0x004f08ff, 
            0x00404dff, 
            0x000000ff, 
            0x000000ff, 
            0x000000ff,
            0xadadadff, 
            0x155fd9ff, 
            0x4240ffff, 
            0x7527feff, 
            0xa01accff, 
            0xb71e7bff, 
            0xb53120ff, 
            0x994e00ff,
            0x6b6d00ff, 
            0x388700ff, 
            0x0c9300ff, 
            0x008f32ff, 
            0x007c8dff, 
            0x000000ff, 
            0x000000ff, 
            0x000000ff,
            0xfffeffff, 
            0x64b0ffff, 
            0x9290ffff, 
            0xc676ffff, 
            0xf36affff, 
            0xfe6eccff, 
            0xfe8170ff, 
            0xea9e22ff,
            0xbcbe00ff, 
            0x88d800ff, 
            0x5ce430ff, 
            0x45e082ff, 
            0x48cddeff, 
            0x4f4f4fff, 
            0x000000ff, 
            0x000000ff,
            0xfffeffff, 
            0xc0dfffff, 
            0xd3d2ffff, 
            0xe8c8ffff, 
            0xfbc2ffff, 
            0xfec4eaff, 
            0xfeccc5ff, 
            0xf7d8a5ff,
            0xe4e594ff, 
            0xcfef96ff, 
            0xbdf4abff, 
            0xb3f3ccff, 
            0xb5ebf2ff, 
            0xb8b8b8ff, 
            0x000000ff, 
            0x000000ff,
        };
#else
const uint32_t colors[] = {
            0xff666666, 
            0xff002a88, 
            0xff1412a7, 
            0xff3b00a4, 
            0xff5c007e, 
            0xff6e0040, 
            0xff6c0600, 
            0xff561d00,
            0xff333500, 
            0xff0b4800, 
            0xff005200, 
            0xff004f08, 
            0xff00404d, 
            0xff000000, 
            0xff000000, 
            0xff000000,
            0xffadadad, 
            0xff155fd9, 
            0xff4240ff, 
            0xff7527fe, 
            0xffa01acc, 
            0xffb71e7b, 
            0xffb53120, 
            0xff994e00,
            0xff6b6d00, 
            0xff388700, 
            0xff0c9300, 
            0xff008f32, 
            0xff007c8d, 
            0xff000000, 
            0xff000000, 
            0xff000000,
            0xfffffeff, 
            0xff64b0ff, 
            0xff9290ff, 
            0xffc676ff, 
            0xfff36aff, 
            0xfffe6ecc, 
            0xfffe8170, 
            0xffea9e22,
            0xffbcbe00, 
            0xff88d800, 
            0xff5ce430, 
            0xff45e082, 
            0xff48cdde, 
            0xff4f4f4f, 
            0xff000000, 
            0xff000000,
            0xfffffeff, 
            0xffc0dfff, 
            0xffd3d2ff, 
            0xffe8c8ff, 
            0xfffbc2ff, 
            0xfffec4ea, 
            0xfffeccc5, 
            0xfff7d8a5,
            0xffe4e594, 
            0xffcfef96, 
            0xffbdf4ab, 
            0xffb3f3cc, 
            0xffb5ebf2, 
            0xffb8b8b8, 
            0xff000000, 
            0xff000000,
        };
#endif